name: Build and Release

on:
  push:
    tags:
      - 'v*' # 当推送以 'v' 开头的标签时触发，例如 v1.0.0
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write 
  id-token: write
  actions: read 

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows exe
        run: flutter build windows --release

      - name: Archive Windows build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows/x64/runner/Release/

  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK with split-per-abi
        run: flutter build apk --release --split-per-abi

      - name: Archive Android build
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: build/app/outputs/flutter-apk/

  release:
    needs: [build-windows, build-android]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./windows-release

      - name: Download Android build
        uses: actions/download-artifact@v4
        with:
          name: android-build
          path: ./android-release

      - name: Create Windows zip
        run: |
          cd windows-release
          zip -r ../wallpaper-windows-${{ github.ref_name }}.zip .
          cd ..

      - name: Get release version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Wallpaper App ${{ github.ref_name }}
          body: |
            ## 🎉 Wallpaper App ${{ github.ref_name }}

            ### 📦 下载链接 (Download Links)

            **Windows:**
            - `wallpaper-windows-${{ github.ref_name }}.zip` - Windows 可执行文件

            **Android:**
            - `app-arm64-v8a-release.apk` - ARM64 设备 (推荐)
            - `app-armeabi-v7a-release.apk` - ARM32 设备
            - `app-x86_64-release.apk` - x86_64 设备

            ### 📋 更新内容 (Changelog)
            - 请在此处添加版本更新内容

            ### 💻 系统要求 (System Requirements)
            - **Windows**: Windows 10 或更高版本
            - **Android**: Android 5.0 (API 21) 或更高版本

            ---
            自动构建于 GitHub Actions
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wallpaper-windows-${{ github.ref_name }}.zip
          asset_name: wallpaper-windows-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Android ARM64 APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android-release/app-arm64-v8a-release.apk
          asset_name: app-arm64-v8a-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Android ARMv7 APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android-release/app-armeabi-v7a-release.apk
          asset_name: app-armeabi-v7a-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Android x86_64 APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android-release/app-x86_64-release.apk
          asset_name: app-x86_64-release.apk
          asset_content_type: application/vnd.android.package-archive
